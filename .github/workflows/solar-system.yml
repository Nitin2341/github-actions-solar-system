name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
  MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
    
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        container: 
          image: node:20
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        # - name: Setup NodeJS Version
        #   uses: actions/setup-node@v4
        #   with:
        #     node-version: 20
    
        - name: Cache NPM dependencies
          uses: actions/cache@v4
          with:
            path: ~/.npm
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
            
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
      name: code-coverage
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v4
        
        - name: setup node
          uses: actions/setup-node@v4

        - name: Cache NPM dependencies
          uses: actions/cache@v4
          with:
            path: ~/.npm
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
            
        - name: Installing Dependencies
          run: npm install

        - run: npm run code-coverage
          continue-on-error: true
          
        - name: Code-Coverage-Result
          uses: actions/upload-artifact@v4
          with:
            name: Code-Coverage-Result
            path: coverage
            retention-days: 5
          
    docker:
      permissions: 
        packages: write
      needs: [unit-testing, code-coverage]
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
          
        - name: Docker Login  
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: set lower case owner name
          run: |
            echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
          env:
            OWNER: '${{ github.repository_owner }}'

        - name: Print env variable
          run: echo $OWNER_LC

        - name: Build and push
          uses: docker/build-push-action@v6
          with:
            context: .
            push: true
            tags: ghcr.io/${{ env.OWNER_LC }}/solar-system:${{ github.sha }}

    dev-deploy:
      runs-on: ubuntu-latest
      needs: docker
      environment: 
        name: development
      steps:
        - uses: actions/checkout@v4

        - name: setup kubectl
          uses: azure/setup-kubectl@v4
          with:
            version: 'v1.28.1'

        - uses: azure/k8s-set-context@v4
          with:
            method: kubeconfig
            kubeconfig: ${{ secrets.KUBECONFIG }}

        - run: kubectl version -o yaml
      
        - id: dev-deploy
          run: echo "INGRESS_IP=$( kubectl -n ingress-nginx get services ingress-nginx-controller -o jsonpath="{.status.loadBalancer.ingress[0].ip}" )" >> $GITHUB_ENV'

        - uses: cschleiden/replace-tokens@v1
          with:
            tokenPrefix: '_{_'
            tokenSuffix: '_}_'
            files: '["kubernetes/development/*.yaml"]'
          env:
            NAMESPACE: development
            REPLICAS: '2'
            IMAGE: ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}
            INGRESS_IP: ${{ env.INGRESS_IP }}

        - run: cat kubernetes/development/*.yaml